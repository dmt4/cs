ninja_required_version = 1.6

#srcpath = .
ldflags = `pkg-config --cflags --libs libsystemd`

cxx = g++
cxxflags = -O0 -g -std=c++1z

cc = gcc
cflags = -O0 -g

#bldpath = bld
#builddir = $bldpath

rule cp
    command = cp $in $out

rule cxxc
    command = $cxx $cxxflags -c $in -o $out

rule cxxl
    command = $cxx $cxxflags $in $ldflags -o $out

rule cc
    command = $cc $cflags -c $in -o $out
rule cl
    command = $cc $cflags $in $ldflags -o $out

build cs.c.o: cc cs.c

build cs.cxx.o  : cxxc cs.cxx   | jobs.hxx
build jobs.cxx.o: cxxc jobs.cxx | jobs.hxx
build jadd.cxx.o: cxxc jadd.cxx | jobs.hxx


build cs  : cxxl cs.c.o cs.cxx.o jobs.cxx.o
build jadd: cxxl jadd.cxx.o | jobs.hxx


rule cmd
    command = $cmd1 $cmd2 $cmd3 $cmd4 $cmd5 $cmd6 $cmd7 $cmd8 $cmd9

rule cmdi
    pool = console
    command = $cmd1 $cmd2 $cmd3 $cmd4 $cmd5 $cmd6 $cmd7 $cmd8 $cmd9

build /etc/systemd/system/org.cs.busname /etc/systemd/system/csd.service: cmdi org.cs.busname csd.service.in
    cmd1 = sudo cp org.cs.busname /etc/systemd/system/org.cs.busname;
    cmd2 = sudo cp csd.service.in /etc/systemd/system/csd.service;
    cmd3 = sudo sed -i s:'ExecStart=.*':"ExecStart=`pwd`/cs":g /etc/systemd/system/csd.service;
    cmd4 = sudo sed -i 1i"# Do not edit this file.\n# It is generated from `pwd`/csd.service.in\n" /etc/systemd/system/csd.service;
    cmd5 = sudo systemctl daemon-reload;


build status: cmdi
    cmd1 = sudo systemctl status csd.service;
    cmd2 = busctl tree org.cs;

build restart: cmdi /etc/systemd/system/csd.service /etc/systemd/system/org.cs.busname cs
    cmd1 = sudo systemctl restart csd.service;
    cmd2 = ninja status;

build run: phony restart

build all: phony jadd cs restart

build clean: cmdi
    cmd1 = sudo systemctl stop csd.service org.cs.busname;
    cmd2 = sudo rm -f /etc/systemd/system/csd.service /etc/systemd/system/org.cs.busname;
    cmd3 = sudo systemctl daemon-reload;
    cmd4 = ninja -t clean;

build test: cmdi jadd
    cmd1 = jids_1=`for i in $$(seq 3); do ./jadd nam$$i req$$i; done`;
    cmd2 = jids_2=`for i in $$(seq 3); do sudo ./jadd nam$$i req$$i; done`;
    cmd3 = ./jlst.sh;
    cmd4 = ./jdel.sh $$jids_1 $$jids_2;
    cmd5 = jids_1=`for i in $$(seq 3); do ./jadd nam$$i req$$i; done`;
    cmd6 = ./jlst.sh;
    cmd7 = sudo ./jdel.sh $$jids_1 $$jids_2;
    cmd8 = ./jlst.sh;

default all

